---
export interface EscultoresProps {
    apiUrl: string;
    checkPuntajeUrl: string;
}

const { apiUrl, checkPuntajeUrl } = Astro.props;
---

<div class="grid-escultores"></div>
<span id="total-escultores"></span>

<div class="popUp-container" style="display: none;">
    <div class="popup">
        <button class="cerrar-popup">×</button>
        <h2 id="nombre-escultor"></h2>
    </div>
</div>

<script define:vars={{ apiUrl, checkPuntajeUrl }}>
    document.addEventListener("DOMContentLoaded", async () => {
        const email = localStorage.getItem("email") || null;
        async function loadEscultores(url, check_puntaje) {
            try {
                const res = await fetch(url);
                const escultores = await res.json();
                const contenedor_escultores =
                    document.querySelector(".grid-escultores");
                const totalEscultores =
                    document.getElementById("total-escultores");

                if (totalEscultores) {
                    totalEscultores.textContent = escultores.length;
                }

                if (contenedor_escultores) {
                    for (const escultor of escultores) {
                        let votado = false;
                        let puntaje = 0;

                        if (email) {
                            try {
                                const response = await fetch(
                                    `${check_puntaje}?correo=${email}&escultor_id=${escultor.id}`,
                                );
                                const result = await response.json();

                                votado = result.votado;
                                puntaje = result.puntaje;
                            } catch (error) {
                                console.log(
                                    `Error al chequear el mensaje: ${error}`,
                                );
                            }
                        }

                        const article = document.createElement("article");
                        article.classList.add("card-escultor");

                        const foto = escultor.foto;
                        const pais = escultor.pais.nombre;
                        const NyA = escultor.nombre_completo;

                        article.innerHTML = `
                <img
                  src="${foto}"
                  loading="lazy"
                  alt="${NyA}"
                  class="escultor-img" 
                  onerror="this.src='images/fondo.jpg'; this.onerror=null;"/>
                <div class="wrap-card">
                  <a href="detalle_escultor.html?id=${escultor.id}">Ver más</a>
                  <div class="nombre-origen" id="nombreOrigen-${escultor.id}">
                    <div class="space">
                      <h3 id="nombre-escultor">${NyA}</h3>
                    </div>
                    <p class="cursiva">${pais}</p>
                    ${
                        votado
                            ? `<div class="calificacion">
                          <p>${puntaje}</p>
                          <i class="material-icons-outlined" id="certamen-tag-footer">&#xe838;</i>
                        </div>`
                            : `<button class="btn-votar" data-id="${escultor.id}">Votar</button>`
                    }
                  </div>
                </div>
              `;

                        contenedor_escultores.appendChild(article);
                    }

                    const botonesVotar =
                        document.querySelectorAll(".btn-votar");
                    const popupContainer =
                        document.querySelector(".popUp-container");
                    const popup = document.querySelector(".popup");
                    const cerrar_popup =
                        document.querySelector(".cerrar-popup");

                    for (const boton of botonesVotar) {
                        boton.addEventListener("click", (event) => {
                            event.preventDefault();
                            const btnTarget = event.target;
                            // con el id del escultor podemos usarlo para identificar al escultor
                            const id = btnTarget.getAttribute("data-id") ?? " ";

                            if (email) {
                                overlay.style.display = "block";
                                popupContainer.style.display = "flex";
                                const nombreEscultor =
                                    document.getElementById("nombre-escultor");

                                nombreEscultor.textContent =
                                    escultores[Number(id) - 1].nombre_completo;
                                const formPopUp =
                                    document.createElement("form");

                                formPopUp.id = `votoForm-${id}`;

                                formPopUp.innerHTML = `
							<div class="rating">
								<input value="5" name="rating" id="star5" type="radio" />
								<label for="star5"></label>
								
								<input value="4" name="rating" id="star4" type="radio" />
								<label for="star4"></label>
								
								<input value="3" name="rating" id="star3" type="radio" />
								<label for="star3"></label>
								
								<input value="2" name="rating" id="star2" type="radio" />
								<label for="star2"></label>
								
								<input value="1" name="rating" id="star1" type="radio" />
								<label for="star1"></label>
							</div>
			
							<button type="submit" class="btn-votarV2">Votar</button>
						`;
                                popup.appendChild(formPopUp);
                                // Ahora pasamos el correo y el id del escultor a la función Voto
                                Voto(email, id);
                            } else {
                                // Si no hay email en localStorage, redirigimos para validación
                                window.location.href = `/validar?id=${id}`;
                            }
                        });
                    }

                    if (cerrar_popup) {
                        cerrar_popup.addEventListener("click", () => {
                            const form = popup?.querySelector("form");
                            overlay.style.display = "none";
                            popupContainer.style.display = "none";
                            if (form) {
                                popup.removeChild(form);
                            }
                        });
                    }
                }
            } catch (error) {
                console.log(`Error al cargar los escultores: ${error}`);
            }
        }

        await loadEscultores(apiUrl, checkPuntajeUrl);
    });
</script>
